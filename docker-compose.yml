services:
  api:
    build:
      context: .
      target: dev
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - neo4j
      - chromadb
      - mongodb
    command: ["python", "-m", "uvicorn", "src.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload", "--log-level", "debug"]
    networks:
      - app-network
    environment:
      # Override for container-to-container communication
      - NEO4J_URI=bolt://neo4j:7687
      - CHROMA_HOST=chromadb
      - CHROMA_PORT=8000
      - MONGODB_HOST=mongodb

  ingestor:
    build:
      context: .
      target: dev
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - neo4j
      - chromadb
      - mongodb
    command: ["python", "src/utils/ingestion_pipeline.py", "--source", "/app/sources"]
    networks:
      - app-network
    environment:
      # Override for container-to-container communication
      - NEO4J_URI=bolt://neo4j:7687
      - CHROMA_HOST=chromadb
      - CHROMA_PORT=8000
      - MONGODB_HOST=mongodb

  neo4j:
    image: neo4j:latest
    restart: unless-stopped
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    environment:
      - NEO4J_AUTH=${NEO4J_AUTH}
      # Fixed memory settings for newer Neo4j versions
      - NEO4J_server_memory_heap_initial__size=512m
      - NEO4J_server_memory_heap_max__size=1G
      - NEO4J_dbms_security_auth__enabled=true
      # Disable strict validation if needed
      - NEO4J_server_config_strict__validation_enabled=false
    networks:
      - app-network

  chromadb:
    image: chromadb/chroma:0.6.3
    restart: unless-stopped
    ports:
      - "8001:8000"
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_PORT=8000
    volumes:
      - chromadb_data:/chroma
    networks:
      - app-network

  mongodb:
    image: mongo:latest
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGODB_DB}
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network

  mongo-express:
    image: mongo-express:latest
    restart: always
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGODB_USER}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGODB_PASSWORD}
      - ME_CONFIG_MONGODB_URL=mongodb://${MONGODB_USER}:${MONGODB_PASSWORD}@mongodb:27017/
    networks:
      - app-network
    depends_on:
      - mongodb

networks:
  app-network:
    driver: bridge

volumes:
  neo4j_data:
  neo4j_logs:
  chromadb_data:
  mongo-data: